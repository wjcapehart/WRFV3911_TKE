#!/bin/ksh
#
 set -x

#
# 20101227 - changed typeset for post output for new format 
#
# August 2005: Hui-Ya Chuang, NCEP: This script uses 
# NCEP's Unipost to post processes WRF native model 
# output, and uses copygb to horizontally interpolate posted 
# output from native A-E to a regular projection grid. 
#
# July 2006: Meral Demirtas, NCAR/DTC: Added new "copygb" 
# options and revised some parts for clarity. 
#
#--------------------------------------------------------
# This script performs 2 jobs:
#
# 1. Run Unipost
# 2. Run copygb to horizontally interpolate output from 
#    native A-E to a regular projection grid
#--------------------------------------------------------

#--- EDIT HERE --------------------------------------------------------
# TOP_DIR - where you put the UPP build directory
# DOMAINPATH - where do you want me to do my work
# WRFPATH - Where do you have a version of WRF compiled
# *** Datafile is entered below - it may reference these variables
# dyncore - set to the model used 
#----------------------------------------------------------------------
export TOP_DIR=/home/wjc/WRF_REALTIME/WRFV370
export DOMAINPATH=/cyclone1/WRF_REALTIME/OUTPUT/WRF36_KUNR_3DOM_WSM6_NOAH_MYNN2_KF2_DUDHIA_NAM218-09km_150x150/
export GRIBOUTPATH=/maelstrom1/WRF_REALTIME/OUTPUT/WRF37_KUNR_3DOM_WSM6_NOAH_MYNN2_KF2_DUDHIA_NAM218-09km_150x150/
export WRFPATH=/home/wjc/WRF_REALTIME/WRFV370/WRFV3

export UNI_POST_HOME=${TOP_DIR}/UPPV3.0
export POSTEXEC=${UNI_POST_HOME}/bin
export ACC_COMMAND=${POSTEXEC}/APCP_diff.EXE

#Specify Dyn Core (ARW or NMM in upper case)
dyncore="ARW"
if [ $dyncore = "NMM" ]; then
   export tag=NMM
elif [ $dyncore = "ARW" ]; then
   export tag=NCAR
else
    echo "${dyncore} is not supported. Edit script to choose ARW or NMM dyncore."
    exit
fi

#--- EDIT HERE --------------------------------------------------------
# startdate = Forecast start date
# fhr =  first forecast hour to be post-processed
# lastfhr = last forecast hour to be post-processed
# incrementhr = the incement (in hours) between forecast files
#----------------------------------------------------------------------

export startdate=`cat /home/wjc/WRF_REALTIME/current_day_upp.txt`
echo $startdate
export fhr=00
export lastfhr=36
export incrementhr=1

# cd to working directory
#cd  ${DOMAINPATH}/postproc
#pwd
# Link Ferrier's microphysic's table and Unipost control file, 


rm -frv ./wrfprs_* ./*bin  ./*dat ./*parm ./*xml ./params_grib2_tbl_new

cp -v ${WRFPATH}/run/ETAMPNEW_DATA               ./eta_micro_lookup.dat
cp -v ${WRFPATH}/run/ETAMPNEW_DATA               ./nam_micro_lookup.dat
cp -v ${WRFPATH}/run/ETAMPNEW_DATA.expanded_rain ./hires_micro_lookup.dat

# Get local copy of parm file
cp -v  ${UNI_POST_HOME}/parm/wrf_cntrl.parm ./wrf_cntrl.parm
cp -v  ${UNI_POST_HOME}/parm/post_avblflds.xml ./post_avblflds.xml
cp -v  ${UNI_POST_HOME}/parm/postcntrl.xml ./postcntrl.xml
cp -v  ${UNI_POST_HOME}/src/lib/g2tmpl/params_grib2_tbl_new ./params_grib2_tbl_new

# link coefficients for crtm2 (simulated GOES)
CRTMDIR=${UNI_POST_HOME}/src/lib/crtm2/src/fix
ln -fs $CRTMDIR/EmisCoeff/Big_Endian/EmisCoeff.bin           ./
ln -fs $CRTMDIR/AerosolCoeff/Big_Endian/AerosolCoeff.bin     ./
ln -fs $CRTMDIR/CloudCoeff/Big_Endian/CloudCoeff.bin         ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/imgr_g12.SpcCoeff.bin    ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/imgr_g12.TauCoeff.bin    ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/imgr_g11.SpcCoeff.bin    ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/imgr_g11.TauCoeff.bin    ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/amsre_aqua.SpcCoeff.bin  ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/amsre_aqua.TauCoeff.bin  ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/tmi_trmm.SpcCoeff.bin    ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/tmi_trmm.TauCoeff.bin    ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/ssmi_f15.SpcCoeff.bin    ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/ssmi_f15.TauCoeff.bin    ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/ssmis_f20.SpcCoeff.bin   ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/ssmis_f20.TauCoeff.bin   ./
ln -fs $CRTMDIR/SpcCoeff/Big_Endian/ssmis_f17.SpcCoeff.bin   ./
ln -fs $CRTMDIR/TauCoeff/ODPS/Big_Endian/ssmis_f17.TauCoeff.bin   ./



#---EDIT HERE --------------------------------------------------------
# tmmark is an variable used as the file extention of the output
#    filename .GrbF is used if this variable is not set
# COMSP is a variable used as the initial string of the output filename
#----------------------------------------------------------------------
export tmmark=tm00
export MP_SHARED_MEMORY=no
export MP_LABELIO=yes

#######################################################
# 1. Run Unipost
#
# The Unipost is used to read native WRF model 
# output and put out isobaric state fields and derived fields.
#######################################################

export NEWDATE=$startdate

while [ $fhr -le $lastfhr ]; do

FXSTR3=`printf "%0.2d" $fhr`
FXSTR2=`printf "%0.2d" $fhr`




echo '      fhr FXSTR:' $fhr  $FXSTR3 $FXSTR2

NEWDATE=`${POSTEXEC}/ndate.exe +${fhr} $startdate`
FIRSTDATE=`${POSTEXEC}/ndate.exe +000 $startdate`

YYFIRST=`echo $FIRSTDATE | cut -c1-4`
MMFIRST=`echo $FIRSTDATE | cut -c5-6`
DDFIRST=`echo $FIRSTDATE | cut -c7-8`
HHFIRST=`echo $FIRSTDATE | cut -c9-10`


YY=`echo $NEWDATE | cut -c1-4`
MM=`echo $NEWDATE | cut -c5-6`
DD=`echo $NEWDATE | cut -c7-8`
HH=`echo $NEWDATE | cut -c9-10`



WRF_MODEL_TIMESTEP=${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}_F${FXSTR2}
VALID_TIME=${YY}-${MM}-${DD}_${HH}:00:00


echo '           NEWDATE' $NEWDATE
echo '         FIRSTDATE' $FIRSTDATE
echo '                YY' $YY
echo 'WRF_MODEL_TIMESTEP' $WRF_MODEL_TIMESTEP
echo '        VALID_TIME' $VALID_TIME
#--- EDIT HERE --------------------------------------------------------
# Update domains
# ie. for domain in d01 d02 d03


for domain in d01  d02
do
echo
echo ---------------------------------------------------------- 
echo ---  Processing domain ${domain}
cp -v wrf_cntrl.parm.${domain} wrf_cntrl.parm


gunzip -frv ${DOMAINPATH}/wrfout_${domain}_${WRF_MODEL_TIMESTEP}.nc

echo ${fhr} ${FXSTR2} ${FXSTR3}  ${WRF_MODEL_TIMESTEP} ${VALID_TIME}

#--- EDIT HERE --------------------------------------------------------
# Create input file for Unipost 
#   First line is where your wrfout data is
#   Second line is the format
#   Third line is the time for this process file
#   Forth line is a tag identifing the model
#----------------------------------------------------------------------
cat > itag <<EOF
${DOMAINPATH}/wrfout_${domain}_${WRF_MODEL_TIMESTEP}.nc
netcdf
${VALID_TIME}
${tag}
EOF
cat itag
#-----------------------------------------------------------------------
#   Run unipost.
#-----------------------------------------------------------------------
rm fort.*

ln -sf wrf_cntrl.parm fort.14


#--- EDIT HERE --------------------------------------------------------
# Uncomment one
#   mpirun for MPI dmpar compile -- UPDATE FOR YOUR SYSTEM!!! ** FOR
#      now there are two environment variables tmmark and COMSP
#   unipost.exe for serial compile
#----------------------------------------------------------------------

# echo Executing command ${POSTEXEC}/unipost.exe  > unipost_${domain}.${FXSTR3}.out 2>&

# Serial run command

${POSTEXEC}/unipost.exe  > unipost_${domain}.${FXSTR3}.out 2>&1

#
# This prefix was given in the wrf_cntl.parm file
pwd
ls -altr  WRFPRS${FXSTR3}.${tmmark}
mv -v  WRFPRS${FXSTR3}.${tmmark} WRFPRS_${domain}.${FXSTR3}

#
#----------------------------------------------------------------------
#   End of unipost job
#----------------------------------------------------------------------

ls -l WRFPRS_${domain}.${FXSTR3}
err1=$?

if test "$err1" -ne 0
then

echo 'UNIPOST FAILED, EXITTING'
exit

fi

if [ $dyncore = "NMM" ]; then

#######################################################################
# 2. Run copygb
# 
# Copygb interpolates Unipost output from its native 
# grid to a regular projection grid. The package copygb 
# is used to horizontally interpolate from one domain 
# to another, it is necessary to run this step for wrf-nmm 
# (but not for wrf-arw) because wrf-nmm's computational 
# domain is on rotated Arakawa-E grid
#
# Copygb can be run in 3 ways as explained below. 
# Uncomment the preferable one.
#
#----------------------------------------------------------------------
#
# Option 1: 
# Copygb is run with a pre-defined AWIPS grid 
# (variable $gridno, see below) Specify the grid to 
# interpolate the forecast onto. To use standard AWIPS grids 
# (list in  http://wwwt.emc.ncep.noaa.gov/mmb/namgrids/ or 
# or http://www.nco.ncep.noaa.gov/pmb/docs/on388/tableb.html),
# set the number of the grid in variable gridno below.
# To use a user defined grid, see explanation above copygb command.
#
# export gridno=212
#
#${POSTEXEC}/copygb.exe -xg${gridno} WRFPRS_${domain}.${fhr} wrfprs_${domain}.${fhr}
#
#----------------------------------------------------------------------
#
#  Option 2: 
#  Copygb ingests a kgds definition on the command line.
#${POSTEXEC}/copygb.exe -xg"255 3 109 91 37748 -77613 8 -71000 10379 9900 0 64 42000 42000" WRFPRS_${domain}.${fhr} wrfprs_${domain}.${fhr}
#
#----------------------------------------------------------------------
#
#  Option 3: 
#  Copygb can ingests contents of files too. For example:
#     copygb_gridnav.txt or copygb_hwrf.txt through variable $nav.
# 
#  Option -3.1:
#    To run for "Lambert Comformal map projection" uncomment the following line
#
 read nav < 'copygb_gridnav.txt'
#
#  Option -3.2:
#    To run for "lat-lon" uncomment the following line 
#
#read nav < 'copygb_hwrf.txt'
#
export nav
#
ls -altr  WRFPRS_*  wrfprs*
echo Executing CopyGB command : ${POSTEXEC}/copygb.exe -xg"${nav}" WRFPRS_${domain}.${fhr} wrfprs_${domain}.${fhr}

${POSTEXEC}/copygb.exe -xg"${nav}" WRFPRS_${domain}.${fhr} wrfprs_${domain}.${fhr}






#
# (For more info on "copygb" see WRF-NMM User's Guide, Chapter-7.)
#----------------------------------------------------------------------

# Check to see whether "copygb" created the requested file.

ls -l wrfprs_${domain}.${FXSTR3}
err1=$?

if test "$err1" -ne 0
then

echo 'copygb FAILED, EXITTING'
exit

fi

#----------------------------------------------------------------------
#   End of copygb job
#----------------------------------------------------------------------









elif [ $dyncore = "ARW" ]; then
    ln -s WRFPRS_${domain}.${FXSTR3} wrfprs_${domain}.${FXSTR3}
fi


                                                                                                                      
  if [ ${FXSTR3} == 00 ]; then                                                                                        
     cp -v WRFPRS_${domain}.${FXSTR3} WRFPRS_${domain}.${FXSTR3}.acc                                                  
  elif [ ${FXSTR3} == 01 ]; then                                                                                      
     cp -v WRFPRS_${domain}.${FXSTR3} WRFPRS_${domain}.${FXSTR3}.acc                                                  
  else                                                                                                                
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}     temp 79                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 61                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 62                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 63                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 65                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 99                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 235                            
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 57                             
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
     ${ACC_COMMAND} WRFPRS_${domain}.${FXSTR3_OLD} WRFPRS_${domain}.${FXSTR3}.acc temp 228                            
     mv -vf         temp                           WRFPRS_${domain}.${FXSTR3}.acc                                     
  fi                                                                                                                  
                                                                                                                      






done
                                                                                                                                                           
FXSTR3_OLD=${FXSTR3}                                                                                                                                         
                                                                                                                                                             
                                                                                                                                                             
                                                                                                                                                             
let "fhr=fhr+$incrementhr"

NEWDATE=`${POSTEXEC}/ndate.exe +${fhr} $startdate`



done


for domain in d01 d02
do

cp -v wrf_cntrl.parm.${domain} wrf_cntrl.parm
ls -altr  WRFPRS_${domain}.* # .acc 
cat WRFPRS_${domain}.* >  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib1
echo 
echo ============================================
echo = Completing Final Phase of Grib Preparation for domain ${domain}
echo ===========================================
echo 
ls -al ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib1
echo
/usr/local/bin/cnvgrib  -nv  -g12  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib1  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib2  > ./cnvgrib2.log
echo 
rm -frv  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib1 
echo
ls -atlr  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib*
echo
rm -frv ./wrfout_${domain}_KUNR.grib2 


ssh kyrill "rm -frv /var/www/html/firemet/wrf_rap/wrfout_${domain}_KUNR.grib2"


if [[ ${domain} = "d01" ]];then
	wgrib2 -match "^[0-9]*(:|\.1)"  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib2 -set analysis_or_forecast_process_id 170 -GRIB ./wrfout_${domain}_KUNR.grib2

 ls -altr ./wrfout_${domain}_KUNR.grib2
scp ./wrfout_${domain}_KUNR.grib2  wjc@kyrill:/var/www/html/firemet/wrf_rap/

        mv -fv ./wrfout_${domain}_KUNR.grib2  ${GRIBOUTPATH}/${domain}/wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib2

else
        wgrib2 -match "^[0-9]*(:|\.1)"  ./wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib2 -set analysis_or_forecast_process_id 171 -GRIB ./wrfout_${domain}_KUNR.grib2
     ls -altr ./wrfout_${domain}_KUNR.grib2
scp ./wrfout_${domain}_KUNR.grib2  wjc@kyrill:/var/www/html/firemet/wrf_rap/

     mkdir -p  ${GRIBOUTPATH}/${domain}/${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}
     mv -fv ./wrfout_${domain}_KUNR.grib2  ${GRIBOUTPATH}/${domain}/${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}/wrfout_${domain}_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib2



fi

done 
rm -frv ./wrfprs* *.out ./WRFPRS*  ./wrfout_* 
ls -atlr  ${GRIBOUTPATH}/d*/wrfout_*_${YYFIRST}-${MMFIRST}-${DDFIRST}_${HHFIRST}.grib*



date
echo "End of Output Job"
exit




